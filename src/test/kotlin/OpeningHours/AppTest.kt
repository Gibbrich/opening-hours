/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package OpeningHours

import OpeningHours.data.ExtOpeningHour
import OpeningHours.data.ExtRestaurantData
import OpeningHours.data.ExtType
import OpeningHours.domain.manager.WorkingHoursConverter
import OpeningHours.domain.model.getDisplayString
import OpeningHours.utils.compareEquals
import org.junit.Assert.assertEquals
import org.junit.Assert.assertTrue
import org.junit.Test

private const val BASIC_INPUT = "src/test/resources/basic_input.json"

private val BASIC_DATA = ExtRestaurantData(
        monday = emptyList(),
        tuesday = listOf(
                ExtOpeningHour(ExtType.OPEN, 36000),
                ExtOpeningHour(ExtType.CLOSE, 64800)
        ),
        wednesday = emptyList(),
        thursday = listOf(
                ExtOpeningHour(ExtType.OPEN, 36000),
                ExtOpeningHour(ExtType.CLOSE, 64800)
        ),
        friday = listOf(
                ExtOpeningHour(ExtType.OPEN, 36000)
        ),
        saturday = listOf(
                ExtOpeningHour(ExtType.CLOSE, 3600),
                ExtOpeningHour(ExtType.OPEN, 36000)
        ),
        sunday = listOf(
                ExtOpeningHour(ExtType.CLOSE, 3600),
                ExtOpeningHour(ExtType.OPEN, 43200),
                ExtOpeningHour(ExtType.CLOSE, 75600)
        )
)

class AppTest {

    @Test
    fun `basic input file correctly parsed`() {
        val inputFile = getInputFile(BASIC_INPUT)
        val result = parseData(inputFile)

        assertEquals(BASIC_DATA, result)
    }

    @Test
    fun `a restaurant can be opened and closed multiple times during the same day`() {
        val inputFile = getInputFile(BASIC_INPUT)
        val result = parseData(inputFile)
        assertEquals(3, result.sunday.size)
    }

    @Test
    fun `a restaurant might not be closed during the same day`() {
        val inputFile = getInputFile(BASIC_INPUT)
        val result = parseData(inputFile)
        val noCloseEvent = result.friday.none { it.type == ExtType.CLOSE }
        assertTrue(noCloseEvent)
    }
}
